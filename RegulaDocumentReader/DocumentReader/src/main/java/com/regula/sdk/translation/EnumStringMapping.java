package com.regula.sdk.translation;

import java.util.HashMap;

class EnumStringMapping {
    static HashMap<Integer, String> eVisualFieldTypeStrings = new HashMap<Integer, String>() {{
        put(0, "strDocumentClassCode");
        put(1, "strIssuingStateCode");
        put(2, "strDocumentNumber");
        put(3, "strDateofExpiry");
        put(4, "strDateofIssue");
        put(5, "strDateofBirth");
        put(6, "strPlaceofBirth");
        put(7, "strPersonalNumber");
        put(8, "strSurname");
        put(9, "strGivenNames");
        put(10, "strMothersName");
        put(11, "strNationality");
        put(12, "strSex");
        put(13, "strHeight");
        put(14, "strWeight");
        put(15, "strEyesColor");
        put(16, "strHairColor");
        put(17, "strAddress");
        put(18, "strDonor");
        put(19, "strSocialSecurityNumber");
        put(20, "strDLClass");
        put(21, "strDLEndorsed");
        put(22, "strDLRestrictionCode");
        put(23, "strDLUnder21Date");
        put(24, "strAuthority");
        put(25, "strSurnameAndGivenNames");
        put(26, "strNationalityCode");
        put(27, "strPassportNumber");
        put(28, "strInvitationNumber");
        put(29, "strVisaID");
        put(30, "strVisaClass");
        put(31, "strVisaSubClass");
        put(32, "strMRZString1");
        put(33, "strMRZString2");
        put(34, "strMRZString3");
        put(35, "strMRZType");
        put(36, "strOptionalData");
        put(37, "strDocumentClassName");
        put(38, "strIssuingStateName");
        put(39, "strPlaceOfIssue");
        put(50, "strOther");
        put(51, "strMRZStrings");
        put(52, "strNameSuffix");
        put(53, "strNamePrefix");
        put(55, "strDateofIssueCheckDigit");
        put(56, "strDocumentSeries");
        put(57, "strRegCertRegNumber");
        put(58, "strRegCertCarModel");
        put(59, "strRegCertCarColor");
        put(60, "strRegCertBodyNumber");
        put(61, "strRegCertCarType");
        put(62, "strRegCertMaxWeight");
        put(63, "strRegCertWeight");
        put(64, "strAddressArea");
        put(65, "strAddressState");
        put(66, "strAddressBuilding");
        put(67, "strAddressHouse");
        put(68, "strAddressFlat");
        put(69, "strPlaceofRegistration");
        put(70, "strDateofRegistration");
        put(71, "strResidentFrom");
        put(72, "strResidentUntil");
        put(73, "strAuthorityCode");
        put(74, "strPlaceofBirthArea");
        put(75, "strPlaceofBirthStateCode");
        put(76, "strAddressStreet");
        put(77, "strAddressCity");
        put(78, "strAddressJurisdictionCode");
        put(79, "strAddressPostalCode");
        put(80, "strDocumentNumberCheckDigit");
        put(81, "strDateofBirthCheckDigit");
        put(82, "strDateofExpiryCheckDigit");
        put(83, "strPersonalNumberCheckDigit");
        put(84, "strFinalCheckDigit");
        put(85, "strPassportNumberCheckDigit");
        put(86, "strInvitationNumberCheckDigit");
        put(87, "strVisaIDCheckDigit");
        put(88, "strSurnameAndGivenNamesCheckDigit");
        put(89, "strVisaValidUntilCheckDigit");
        put(90, "strPermitDLClass");
        put(91, "strPermitDateofExpiry");
        put(92, "strPermitIdentifier");
        put(93, "strPermitDateofIssue");
        put(94, "strPermitRestrictionCode");
        put(95, "strPermitEndorsed");
        put(96, "strIssueTimestamp");
        put(97, "strNumberofDuplicates");
        put(98, "strMedicalIndicatorCodes");
        put(99, "strNonResidentIndicator");
        put(100, "strVisaType");
        put(101, "strVisaValidFrom");
        put(102, "strVisaValidUntil");
        put(103, "strDurationofStay");
        put(104, "strNumberofEntries");
        put(108, "strUniqueCustomerIdentifier");
        put(109, "strCommercialVehicleCodes");
        put(110, "strAKADateofBirth");
        put(111, "strAKASocialSecurityNumber");
        put(112, "strAKAName");
        put(113, "strAKANameSuffix");
        put(114, "strAKANamePrefix");
        put(115, "strAKANamePrefixDbl");
        put(116, "strMailingAddressStreet");
        put(117, "strMailingAddressCity");
        put(118, "strMailingAddressJurisdictionCode");
        put(119, "strMailingAddressPostalCode");
        put(120, "strAuditInformation");
        put(121, "strInventoryNumber");
        put(122, "strRaceEthnicity");
        put(123, "strJurisdictionVehicleClass");
        put(124, "strJurisdictionEndorsementCode");
        put(125, "strJurisdictionRestrictionCode");
        put(126, "strFamilyName");
        put(127, "strGivenNamesRUS");
        put(128, "strVisaIDRUS");
        put(129, "strFathersName");
        put(130, "strFathersNameRUS");
        put(131, "strSurnameAndGivenNamesRUS");
        put(132, "strPlaceOfBirthRUS");
        put(133, "strAuthorityRUS");
        put(134, "strIssuingStateCodeNumeric");
        put(135, "strNationalityCodeNumeric");
        put(136, "strEnginePower");
        put(137, "strEngineVolume");
        put(138, "strChassisNumber");
        put(139, "strEngineNumber");
        put(140, "strEngineModel");
        put(141, "strVehicleCategory");
        put(142, "strIdentityCardNumber");
        put(143, "strControlNo");
        put(144, "strParrentsGivenNames");
        put(145, "strSecondSurname");
        put(146, "strMiddleName");
        put(147, "strRegCertVIN");
        put(148, "strRegCertVINCheckDigit");
        put(149, "strRegCertVINChecksum");
        put(150, "strLine1CheckDigit");
        put(151, "strLine2CheckDigit");
        put(152, "strLine3CheckDigit");
        put(153, "strLine1Checksum");
        put(154, "strLine2Checksum");
        put(155, "strLine3Checksum");
        put(156, "strRegCertRegNumberCheckDigit");
        put(157, "strRegCertRegNumberChecksum");
        put(158, "strRegCertVehicleITSCode");
        put(159, "CAN");
        put(160, "strMaritalStatus");
        put(161, "strCompanyName");
        put(162, "strSpecialNotes");
        put(163, "strSurnameofSpose");
        put(164, "strTrackingNumber");
        put(165, "strBookletNumber");
        put(166, "strChildren");
        put(167, "strCopy");
        put(168, "strSerialNumber");
        put(169, "strDossierNumber");
        put(170, "strAKASurnameAndGivenNames");
        put(171, "strTerritorialValidity");
        put(172, "strMRZStringsWithCorrectCheckSums");
        put(173, "strDLCDLRestrictionCode");
        put(174, "strDLUnder18Date");
        put(175, "strDLRecordCreated");
        put(176, "strDLDuplicateDate");
        put(177, "strDLIssType");
        put(178, "strMilitaryBookNumber");
        put(179, "strDestination");
        put(180, "strBloodGroup");
        put(181, "strSequenceNumber");
        put(182, "strRegCertBodyType");
        put(183, "strRegCertCarMark");
        put(184, "strTransactionNumber");
        put(185, "strAge");
        put(186, "strFolioNumber");
        put(187, "strVoterKey");
        put(188, "strAddressMunicipality");
        put(189, "strAddressLocation");
        put(190, "strSection");
        put(191, "strOCRNumber");
        put(192, "strFederalElections");
        put(193, "strReferenceNumber");
        put(194, "strOptionalDataChecksum");
        put(195, "strOptionalDataCheckDigit");
        put(196, "strVisaNumber");
        put(197, "strVisaNumberChecksum");
        put(198, "strVisaNumberCheckDigit");
        put(199, "strVoter");
        put(200, "strPreviousType");
        put(220, "strFieldFromMRZ");
        put(251, "strStatusDateofExpiry");
        put(252, "strBanknoteNumber");
        put(253, "strCSCCode");
        put(254, "strArtisticName");
        put(255, "strAcademicTitle");
        put(256, "strAdressCountry");
        put(257, "strAdressZipcode");
        put(258, "streIDResidencePermit1");
        put(259, "streIDResidencePermit2");
        put(260, "streIDPlaceOfBirthStreet");
        put(261, "streIDPlaceOfBirthCity");
        put(262, "streIDPlaceOfBirthState");
        put(263, "streIDPlaceOfBirthCountry");
        put(264, "streIDPlaceOfBirthZipcode");
        put(265, "strCDLClass");
        put(266, "strDLUnder19Date");
        put(267, "strWeightPound");
        put(268, "strLimitedDurationDocumentIndicator");
        put(269, "strEndorsementExpirationDate");
        put(270, "strRevisionDate");
        put(271, "strComplianceType");
        put(272, "strFamilyNameTruncation");
        put(273, "strFirstNameTruncation");
        put(274, "strMiddleNameTruncation");
        put(275, "strExamDate");
        put(276, "strOrganization");
        put(277, "strDepartment");
        put(278, "strPayGrade");
        put(279, "strRank");
        put(280, "strBenefitsNumber");
        put(281, "strSponsorService");
        put(282, "strSponsorStatus");
        put(283, "strSponsor");
        put(284, "strRelationship");
        put(285, "strUSCIS");
        put(286, "strCategory");
        put(287, "strConditions");
        put(288, "strIdentifier");
        put(289, "strConfiguration");
        put(290, "strDiscretionaryData");
        put(291, "strLine1OptionalData");
        put(292, "strLine2OptionalData");
        put(293, "strLine3OptionalData");
        put(294, "strEQVCode");
        put(295, "strALTCode");
        put(296, "strBinaryCode");
        put(297, "strPseudoCode");
        put(298, "strFee");
        put(299, "strStampNumber");
        put(300, "strSBHSecurityOptions");
        put(301, "strSBHIntegrityOptions");
        put(302, "strDateofCreation");
        put(303, "strValidityPeriod");
        put(304, "strPatronHeaderVersion");
        put(305, "strBDBType");
        put(306, "strBiometricType");
        put(307, "strBiometricSubtype");
        put(308, "strBiometricProductID");
        put(309, "strBiometricFormatOwner");
        put(310, "strBiometricFormatType");
        put(311, "strPhone");
        put(312, "strProfession");
        put(313, "strTitle");
        put(314, "strPersonalSummary");
        put(315, "strOtherValidID");
        put(316, "strCustodyInfo");
        put(317, "strOtherName");
        put(318, "strObservations");
        put(319, "strTax");
        put(320, "strDateofPersonalization");
        put(321, "strPersonalizationSN");
        put(322, "strOtherPersonName");
        put(323, "strPersonToNotifyDateofRecord");
        put(324, "strPersonToNotifyName");
        put(325, "strPersonToNotifyPhone");
        put(326, "strPersonToNotifyAddress");
        put(327, "strDSCertificateIssuer");
        put(328, "strDSCertificateSubject");
        put(329, "strDSCertificateValidFrom");
        put(330, "strDSCertificateValidTo");
        put(331, "strVRCDataObjectEntry");
        put(340, "strGNIBNumber");
        put(341, "strDeptNumber");
        put(342, "strTelexCode");
        put(343, "strAllergies");
        put(344, "strSpCode");
        put(345, "strCourtCode");
        put(346, "strCty");
        put(347, "strSponsorSSN");
        put(348, "strDoDNumber");
        put(349, "strMCNoviceDate");
        put(350, "strDUFNumber");
        put(351, "strAGY");
        put(352, "strPNRCode");
        put(353, "strFromAirportCode");
        put(354, "strToAirportCode");
        put(355, "strFlightNumber");
        put(356, "strDateofFlight");
        put(357, "strSeatNumber");
        put(358, "strDateofIssueBoardingPass");
        put(359, "strCCWUntil");
        put(360, "strReferenceNumberChecksum");
        put(361, "strReferenceNumberCheckDigit");
        put(362, "strRoomNumber");
        put(363, "strReligion");
        put(364, "strRemainderTerm");
        put(365, "strElectronicTicketIndicator");
        put(366, "strCompartmentCode");
        put(367, "strCheckInSequenceNumber");
        put(368, "strAirlineDesignatorofboardingpassissuer");
        put(369, "strAirlineNumericCode");
        put(370, "strTicketNumber");
        put(371, "strFrequentFlyerAirlineDesignator");
        put(372, "strFrequentFlyerNumber");
        put(373, "strFreeBaggageAllowance");
        put(374, "strPDF417Codec");
        put(375, "strIdentityCardNumberChecksum");
        put(376, "strIdentityCardNumberCheckDigit");
        put(377, "strVeteran");
        put(378, "strDLClassCodeA1From");
        put(379, "strDLClassCodeA1To");
        put(380, "strDLClassCodeA1Notes");
        put(381, "strDLClassCodeAFrom");
        put(382, "strDLClassCodeATo");
        put(383, "strDLClassCodeANotes");
        put(384, "strDLClassCodeBFrom");
        put(385, "strDLClassCodeBTo");
        put(386, "strDLClassCodeBNotes");
        put(387, "strDLClassCodeC1From");
        put(388, "strDLClassCodeC1To");
        put(389, "strDLClassCodeC1Notes");
        put(390, "strDLClassCodeCFrom");
        put(391, "strDLClassCodeCTo");
        put(392, "strDLClassCodeCNotes");
        put(393, "strDLClassCodeD1From");
        put(394, "strDLClassCodeD1To");
        put(395, "strDLClassCodeD1Notes");
        put(396, "strDLClassCodeDFrom");
        put(397, "strDLClassCodeDTo");
        put(398, "strDLClassCodeDNotes");
        put(399, "strDLClassCodeBEFrom");
        put(400, "strDLClassCodeBETo");
        put(401, "strDLClassCodeBENotes");
        put(402, "strDLClassCodeC1EFrom");
        put(403, "strDLClassCodeC1ETo");
        put(404, "strDLClassCodeC1ENotes");
        put(405, "strDLClassCodeCEFrom");
        put(406, "strDLClassCodeCETo");
        put(407, "strDLClassCodeCENotes");
        put(408, "strDLClassCodeD1EFrom");
        put(409, "strDLClassCodeD1ETo");
        put(410, "strDLClassCodeD1ENotes");
        put(411, "strDLClassCodeDEFrom");
        put(412, "strDLClassCodeDETo");
        put(413, "strDLClassCodeDENotes");
        put(414, "strDLClassCodeMFrom");
        put(415, "strDLClassCodeMTo");
        put(416, "strDLClassCodeMNotes");
        put(417, "strDLClassCodeLFrom");
        put(418, "strDLClassCodeLTo");
        put(419, "strDLClassCodeLNotes");
        put(420, "strDLClassCodeTFrom");
        put(421, "strDLClassCodeTTo");
        put(422, "strDLClassCodeTNotes");
        put(423, "strDLClassCodeAMFrom");
        put(424, "strDLClassCodeAMTo");
        put(425, "strDLClassCodeAMNotes");
        put(426, "strDLClassCodeA2From");
        put(427, "strDLClassCodeA2To");
        put(428, "strDLClassCodeA2Notes");
        put(429, "strDLClassCodeB1From");
        put(430, "strDLClassCodeB1To");
        put(431, "strDLClassCodeB1Notes");
        put(432, "strSurnameAtBirth");
        put(433, "strCivilStatus");
        put(434, "strNumberofSeats");
        put(435, "strNumberofStandingPlaces");
        put(436, "strMaxSpeed");
        put(437, "strFuelType");
        put(438, "strECEnvironmentalType");
        put(439, "strPowerWeightRatio");
        put(440, "strMaxMassofTrailerBraked");
        put(441, "strMaxMassofTrailerUnbraked");
        put(442, "strTransmissionType");
        put(443, "strTrailerHitch");
        put(444, "strAccompaniedby");
        put(445, "strPoliceDistrict");
        put(446, "strFirstIssueDate");
        put(447, "strPayloadCapacity");
        put(448, "strNumberofAxels");
        put(449, "strPermissibleAxleLoad");
        put(450, "strPrecinct");
        put(451, "strInvitedBy");
        put(452, "strPurposeOfEntry");
        put(453, "strSkinColor");
        put(454, "strComplexion");
        put(455, "strAirportFrom");
        put(456, "strAirportTo");
        put(457, "strAirlineName");
        put(458, "strAirlineNameFrequentFlyer");
        put(459, "strLicenseNumber");
        put(460, "strInTanks");
        put(461, "strExeptInTanks");
        put(462, "strFastTrack");
        put(463, "strOwner");
        put(464, "strMRZLinesICAORFID");
        put(465, "strNumberOfCardIssuance");
        put(466, "strNumberOfCardIssuanceChecksum");
        put(467, "strNumberOfCardIssuanceCheckDigit");
        put(468, "strCenturyDateOfBirth");
    }};

    static HashMap<Integer, String> eGraphicFieldTypeStrings = new HashMap<Integer, String>() {{
        put(201, "strPortrait");
        put(202, "strFingerprint");
        put(203, "strEye");
        put(204, "strSignature");
        put(205, "strBarCode");
        put(210, "strGhostPortrait");
        put(250, "strOther");
        put(300, "strfppLeftThumb");
        put(301, "strfppLeftIndexFinger");
        put(302, "strfppLeftMiddleFinger");
        put(303, "strfppLeftRingFinger");
        put(304, "strfppLeftLittleFinger");
        put(305, "strfppRightThumb");
        put(306, "strfppRightIndexFinger");
        put(307, "strfppRightMiddleFinger");
        put(308, "strfppRightRingFinger");
        put(309, "strfppRightLittleFinger");
    }};

    static HashMap<Integer, String> eBarCodeModuleTypeStrings = new HashMap<Integer, String>() {{
        put(0, "strBCMText");
        put(1, "strBCMByte");
        put(2, "strBCMNum");
        put(3, "strBCMShift");
        put(4, "strBCMAll");
    }};

    static HashMap<Integer, String> eRFID_BaudRateStrings = new HashMap<Integer, String>() {{
        put(1, "str106");
        put(2, "str212");
        put(4, "str424");
        put(8, "str848");
    }};

    static HashMap<Integer, String> eRFDataGroupsStrings = new HashMap<Integer, String>() {{
        put(1, "strDG1");
        put(2, "strDG2");
        put(4, "strDG3");
        put(8, "strDG4");
        put(16, "strDG5");
        put(32, "strDG6");
        put(64, "strDG7");
        put(128, "strDG8");
        put(256, "strDG9");
        put(512, "strDG10");
        put(1024, "strDG11");
        put(2048, "strDG12");
        put(4096, "strDG13");
        put(8192, "strDG14");
        put(16384, "strDG15");
        put(32768, "strDG16");
        put(65536, "strSOD");
    }};

    static HashMap<Integer, String> eRPRM_AuthenticityStrings = new HashMap<Integer, String>() {{
        put(1, "strUVLuminescence");
        put(2, "strIRB900");
        put(4, "strUVImage");
        put(8, "strAxialProtection");
        put(16, "strUVFibers");
        put(32, "strIRVis");
        put(64, "strSecurityText");
        put(128, "strIPI");
        put(512, "strPhotoEmbedType");
        put(1024, "strOVICheck");
        put(4096, "strHolograms");
        put(8192, "strPhotoArea");
        put(16384, "strUVBackgroundComp");
        put(32768, "strPortraitComparison");
        put(65536, "strBarcodeFormatCheck");
    }};
}

